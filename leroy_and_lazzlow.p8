pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
function _init()
	p = {}
	p.x = 56
	p.y = 56
	p.facing = 1
	friend = {}
	friend.flight = false
	cur_map_x = 1
	cur_map_y = 1
	init_turn_timer = 5
	turn_timer = init_turn_timer
	arrow_array = {}
end

function _update()
 get_move()
 update_arrows() 
 turn_timer -= 1
end

function _draw()
 cls()
 draw_player()
 draw_map()
 draw_arrows()
 debug()
 
end

-->8
--draw help
function draw_player()
 spr(3, p.x, p.y)
end

function draw_map()
 if friend.flight then
  draw_full_map()
 else 
  draw_partial_map()
 end
end

function draw_full_map()
 local x = cur_map_x-1
 local y = cur_map_y-1
 map(16*x,16*y,0,0,16,16)
end

function draw_partial_map()
 local x = cur_map_x-1
 local y = cur_map_y-1
 map(16*x+(p.x/8)-3, 16*y+(p.y/8)-3, p.x-24, p.y-24, 6, 6)
end

function draw_arrows()
 for arrow in all(arrow_array) do
  draw_arrow(arrow)
 end
end

function draw_arrow(arrow)
 local x = cur_map_x-1
 local y = cur_map_y-1
 spr(arrow.sprite, arrow.x, arrow.y)
 map(16*x+(arrow.x/8)-1, 16*y+(arrow.y/8)-1, arrow.x-8, arrow.y-8, 3, 3)
end
-->8
--player controller
function get_move()
	if btn(5) then
	 fly()
	elseif not btn(5) then 
	 land()
	 if btnp(4) then
 	 shoot()
 	elseif btnp(0) then
 	 move_left()
 	elseif btnp(1) then
 	 move_right()
 	elseif btnp(2) then
 	 move_up()
 	elseif btnp(3) then
 	 move_down()
	 end
	 update_map()
	end
end

function fly()
 friend.flight = true
end

function land()
 friend.flight = false
end

function shoot()
 fire_arrow(p.x, p.y, p.facing)
end

function move_left()
 if can_move(p.x-8, p.y) then
  p.x -= 8
 end
end

function move_right()
 if can_move(p.x+8, p.y) then
  p.x += 8
 end
end

function move_up()
 if can_move(p.x, p.y-8) then
  p.y -= 8
 end
end

function move_down()
 if can_move(p.x, p.y+8) then
  p.y += 8 
 end
end

function can_move(x, y)
 return not is_obstacle(x, y)
end





-->8
--other controller
function fire_arrow(x, y, direction)
 local is_x = true
 local is_positive = true
 local x = p.x
 local y = p.y
 if direction == 0 then
  x-=8
 elseif direction == 1 then
  x+=8 
 elseif direction == 2 then
  y-=8 
 elseif direction == 3 then
  y+=8 
 end
 create_arrow(x, y, direction)
end


--[[function create_arrow(x, y, direction)
 arrow = {}
 arrow.x = x
 arrow.y = y
 arrow.direction = direction
 arrow.sprite = 2
 add(arrow_array, arrow)
end]]

function delete_arrows()
 for arrow in all(arrow_array) do
  del(arrow_array, arrow)
 end
end

function update_map()
 if p.x < 0 then
  p.x = 120
  cur_map_x -= 1
  reset_map()
 end
 if p.x > 120 then
  p.x = 0
  cur_map_x += 1
  reset_map()
 end
 if p.y < 0 then
  p.y = 120
  cur_map_y -= 1
  reset_map()
 end
 if p.y > 120 then
  p.y = 0
  cur_map_y += 1
  reset_map()
 end
end

function reset_map()
 delete_arrows()
end
-->8
--helper functions

function get_bit(x, y, bit)
 local map_x = cur_map_x-1
 local map_y = cur_map_y-1
 return fget(mget(16*map_x+x/8,16*map_y+y/8),bit)
end

function is_obstacle(x, y)
 return get_bit(x, y, 1)
end
-->8
--program help
--[[function debug()
 print(p.x, 0, 0)
 print(p.y, 0, 10)
 print(cur_map_x, 70, 0)
 print(cur_map_y, 70, 10)
 print(get_bit(p.x, p.y, 1), 0, 70)
end]]
-->8
--jacob folder

--jacob function
function update_arrows()
 for arrows in all(arrow_array) do
  
 end
end

--jacob function
--replaced from other folder(3)
function create_arrow(x, y, direction)
 arrow = {}
 arrow.x = x
 arrow.y = y
 arrow.direction = direction
 arroe
 arrow.sprite = 2
 add(arrow_array, arrow)
end

--replaced from program helper (5)
function debug()
 print(p.x, 0, 0)
 print(p.y, 0, 10)
 print(cur_map_x, 70, 0)
 print(cur_map_y, 70, 10)
 print(get_bit(p.x, p.y, 1), 0, 70)
end
__gfx__
00000000666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555560000000000888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700555000067000005008800080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000555555567444445508080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000555000067000005008000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700555000060000000008999080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555560000000008888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555600000000000c0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101000101010101010101010100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101000101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000500000f050000000000000000250502905000000000002e05000000310500000031050000002d050260501a0501405016050000001a0500000020050000000000026050000002b050000002e0503005031050
